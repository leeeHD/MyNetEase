<?xml version="1.0" encoding="utf-8"?>
<resources>
  <declare-styleable name="stl_SmartTabLayout">
    <attr name="stl_indicatorAlwaysInCenter" format="boolean"/>
    <attr name="stl_indicatorWithoutPadding" format="boolean"/>
    <attr name="stl_indicatorInFront" format="boolean"/>
    <attr name="stl_indicatorInterpolation" format="enum">
      <enum name="smart" value="0"/>
      <enum name="linear" value="1"/>
    </attr>
    <attr name="stl_indicatorGravity" format="enum">
      <enum name="bottom" value="0"/>
      <enum name="top" value="1"/>
      <enum name="center" value="2"/>
    </attr>
    <attr name="stl_indicatorColor" format="color"/>
    <attr name="stl_indicatorColors" format="reference"/>
    <attr name="stl_indicatorThickness" format="dimension"/>
    <attr name="stl_indicatorWidth" format="dimension">
      <enum name="auto" value="-1"/>
    </attr>
    <attr name="stl_indicatorCornerRadius" format="dimension"/>
    <attr name="stl_overlineColor" format="color"/>
    <attr name="stl_overlineThickness" format="dimension"/>
    <attr name="stl_underlineColor" format="color"/>
    <attr name="stl_underlineThickness" format="dimension"/>
    <attr name="stl_dividerColor" format="color"/>
    <attr name="stl_dividerColors" format="reference"/>
    <attr name="stl_dividerThickness" format="dimension"/>
    <attr name="stl_defaultTabBackground" format="reference"/>
    <attr name="stl_defaultTabTextAllCaps" format="boolean"/>
    <attr name="stl_defaultTabTextColor" format="color|reference"/>
    <attr name="stl_defaultTabTextSize" format="dimension"/>
    <attr name="stl_defaultTabTextHorizontalPadding" format="dimension"/>
    <attr name="stl_defaultTabTextMinWidth" format="dimension"/>
    <attr name="stl_customTabTextLayoutId" format="reference"/>
    <attr name="stl_customTabTextViewId" format="reference"/>
    <attr name="stl_distributeEvenly" format="boolean"/>
    <attr name="stl_clickable" format="boolean"/>
    <attr name="stl_titleOffset" format="dimension">
      <enum name="auto_center" value="-1"/>
    </attr>
    <attr name="stl_drawDecorationAfterTab" format="boolean"/>
  </declare-styleable>


  <declare-styleable name="PtrFrameLayout">
    <!-- Optional. If you put header and content in xml, you can you these to specify them. -->
    <attr name="ptr_header" format="reference" />
    <attr name="ptr_content" format="reference" />

    <!-- the resistance when you are moving the frame -->
    <attr name="ptr_resistance" format="float" />

    <!-- the ration of the height of the header to trigger refresh -->
    <attr name="ptr_ratio_of_header_height_to_refresh" format="float" />

    <attr name="ptr_duration_to_close" format="integer" />
    <attr name="ptr_duration_to_close_header" format="integer" />

    <!-- pull to refresh, otherwise release to refresh, default is release to refresh -->
    <attr name="ptr_pull_to_fresh" format="boolean" />

    <!-- keep header when refreshing-->
    <attr name="ptr_keep_header_when_refresh" format="boolean" />
  </declare-styleable>

  <declare-styleable name="PtrClassicHeader">
    <attr name="ptr_rotate_ani_time" format="integer" />
  </declare-styleable>
</resources>
